<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Öchpochmak Development</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    
    <style>
        canvas {
            background-color: lightblue;
        }
    </style>

</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <span>LineRunnerApp</span>
            </div>
        </nav>
    </header>
    
    <div class="container">

        <canvas id="PaintPad" width="600" height="600"></canvas>

    </div>

    <script src="~/js/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script>
        // Координаты меток, полученные по нажатию кнопки мыши
        let points = new Array();
        // Текущие координаты
        let x = 0, y = 0;

        // Область изображения и контекст
        var canvas = document.getElementById('PaintPad');
        var context = canvas.getContext('2d');

        // По нажатию кнопки на область прорисовки,
        // полученные координаты вписываем в коллекцию координат меток
        function addPoint(x, y) {
            points.push([x, y]);
        }

        // События на нажатие кнопки мыши 
        function mouseDownEvent(e) {
            switch (e.which) {
                // События будут отслеживаться только по нажатию левой кнопки
                case 1:
                    // Получяем координаты мыши и 
                    // отправляем в коллекцию координат меток
                    x = e.offsetX;
                    y = e.offsetY;
                    addPoint(x, y);
                    break;
            }
        }

        // Фиксируем события нажатия кнопки мыши
        canvas.addEventListener('mousedown', mouseDownEvent);

        // Функция прорисовки маркеров на области изображения
        function drawMarker() {
            // Проходим по всем координатам и рисуем точки
            for (let i = 0; i < points.length; i++) {
                context.beginPath();
                context.arc(points[i][0], points[i][1], 5, 0, Math.PI * 2);
                context.fillStyle = "red";
                context.fill();
                context.closePath();
            }
        }

        // Функция прорисовки элементов
        function draw() {
            // Очистка изображения
            context.clearRect(0, 0, canvas.width, canvas.height);
            // Прорисовка маркеров для перемещения точек
            drawMarker();
        }
        // Интервал обновления изображения
        setInterval(draw, 10);
    </script>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2021 - LineRunnerApp
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>